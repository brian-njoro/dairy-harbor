"""update database models

Revision ID: 6413f8a3a9db
Revises: 
Create Date: 2024-07-19 11:56:48.241036

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6413f8a3a9db'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('farmer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email_address', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_address')
    )
    op.create_table('worker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email_address', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_address')
    )
    op.create_table('cattle',
    sa.Column('serial_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('photo', sa.String(length=255), nullable=True),
    sa.Column('breed', sa.String(length=100), nullable=True),
    sa.Column('father_breed', sa.String(length=100), nullable=True),
    sa.Column('mother_breed', sa.String(length=100), nullable=True),
    sa.Column('method_bred', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.PrimaryKeyConstraint('serial_number')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('agent', sa.String(length=100), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('agent', sa.String(length=100), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_cost',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_paid', sa.Date(), nullable=True),
    sa.Column('item_type', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('incurred_by', sa.Integer(), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['incurred_by'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('agent', sa.String(length=100), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artificial_insemination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('insemination_date', sa.Date(), nullable=True),
    sa.Column('semen_breed', sa.String(length=100), nullable=True),
    sa.Column('sexed', sa.Boolean(), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calving',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('calving_date', sa.Date(), nullable=True),
    sa.Column('calf_id', sa.Integer(), nullable=True),
    sa.Column('outcome', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('assisted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assisted_by'], ['worker.id'], ),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cattle_death',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('cause_of_death', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cattle_worker_association',
    sa.Column('cattle_serial_number', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_serial_number'], ['cattle.serial_number'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], )
    )
    op.create_table('dehorning',
    sa.Column('dehorning_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('method', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('dehorning_id')
    )
    op.create_table('deworming',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('drug_used', sa.String(length=100), nullable=True),
    sa.Column('method_of_administration', sa.String(length=100), nullable=True),
    sa.Column('disease', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('heat_detection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('detection_date', sa.Date(), nullable=True),
    sa.Column('detected_by', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milk_production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('recorded_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['recorded_by'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milk_sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('buyer_type', sa.String(length=100), nullable=True),
    sa.Column('buyer_name', sa.String(length=100), nullable=True),
    sa.Column('buyer_contact', sa.String(length=100), nullable=True),
    sa.Column('price_per_litre', sa.Float(), nullable=True),
    sa.Column('sold_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('farmer_id', sa.Integer(), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['sold_by'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('miscarriage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('natural_insemination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('father_breed', sa.String(length=100), nullable=True),
    sa.Column('father_id', sa.String(length=100), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['farmer.id'], ),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['worker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pregnancy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('detection_date', sa.Date(), nullable=True),
    sa.Column('expected_delivery_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('treatment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('drug_used', sa.String(length=100), nullable=True),
    sa.Column('method_of_administration', sa.String(length=100), nullable=True),
    sa.Column('disease', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vaccination',
    sa.Column('vaccination_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('method', sa.String(length=100), nullable=True),
    sa.Column('drug', sa.String(length=100), nullable=True),
    sa.Column('disease', sa.String(length=100), nullable=True),
    sa.Column('cattle_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cattle_id'], ['cattle.serial_number'], ),
    sa.PrimaryKeyConstraint('vaccination_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vaccination')
    op.drop_table('treatment')
    op.drop_table('pregnancy')
    op.drop_table('notification')
    op.drop_table('natural_insemination')
    op.drop_table('miscarriage')
    op.drop_table('milk_sales')
    op.drop_table('milk_production')
    op.drop_table('log_message')
    op.drop_table('heat_detection')
    op.drop_table('deworming')
    op.drop_table('dehorning')
    op.drop_table('cattle_worker_association')
    op.drop_table('cattle_death')
    op.drop_table('calving')
    op.drop_table('artificial_insemination')
    op.drop_table('medicine')
    op.drop_table('maintenance_cost')
    op.drop_table('feeds')
    op.drop_table('equipment')
    op.drop_table('cattle')
    op.drop_table('worker')
    op.drop_table('farmer')
    # ### end Alembic commands ###
